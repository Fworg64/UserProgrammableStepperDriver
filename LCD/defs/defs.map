Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                              src/LCD.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              src/LCD.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

stepperctr          0x1               src/main.o
numberofrots        0x1               src/main.o

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
 .text          0x0000000000000000        0x0 src/LCD.o
 .data          0x0000000000000000        0x0 src/LCD.o
 .bss           0x0000000000000000        0x0 src/LCD.o
 .text.lcd_write_segment
                0x0000000000000000       0x46 src/LCD.o
 .text.lcd_set_baud
                0x0000000000000000       0x1e src/LCD.o
 .text.lcd_display_baud
                0x0000000000000000       0x1c src/LCD.o
 .text.lcd_turn_on_blinking_cursor
                0x0000000000000000       0x1c src/LCD.o
 .text.lcd_turn_off_blinking_cursor
                0x0000000000000000       0x1c src/LCD.o
 .rodata.segment_pos
                0x0000000000000000        0x4 src/LCD.o
 .text          0x0000000000000000        0x0 src/menu.o
 .data          0x0000000000000000        0x0 src/menu.o
 .bss           0x0000000000000000        0x0 src/menu.o
 .stab          0x0000000000000000      0x264 src/menu.o
                                        0x270 (size before relaxing)
 .comment       0x0000000000000000       0x12 src/menu.o
 .text          0x0000000000000000        0x0 src/main.o
 .data          0x0000000000000000        0x0 src/main.o
 .bss           0x0000000000000000        0x0 src/main.o
 .text.port_init
                0x0000000000000000        0x6 src/main.o
 .text          0x0000000000000000        0x0 src/eeprom.o
 .data          0x0000000000000000        0x0 src/eeprom.o
 .bss           0x0000000000000000        0x0 src/eeprom.o
 .text          0x0000000000000000        0x0 src/usci.o
 .data          0x0000000000000000        0x0 src/usci.o
 .bss           0x0000000000000000        0x0 src/usci.o
 .text          0x0000000000000000        0x0 src/timer.o
 .data          0x0000000000000000        0x0 src/timer.o
 .bss           0x0000000000000000        0x0 src/timer.o
 .stab          0x0000000000000000      0x42c src/timer.o
                                        0x5f4 (size before relaxing)
 .text.timer_init
                0x0000000000000000       0x2c src/timer.o
 .text.timer_start
                0x0000000000000000        0xc src/timer.o
 .text.timer_stop
                0x0000000000000000        0xc src/timer.o
 .text.timer_set_comp
                0x0000000000000000       0x18 src/timer.o
 .comment       0x0000000000000000       0x12 src/timer.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
LOAD src/LCD.o
LOAD src/menu.o
LOAD src/main.o
LOAD src/eeprom.o
LOAD src/usci.o
LOAD src/timer.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libatmega32u4.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x41a
 *(.vectors)
 .vectors       0x0000000000000000       0xac /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x00000000000000ac                . = ALIGN (0x2)
                0x00000000000000ac                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000ac        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000ac                __trampolines_end = .
 *(.progmem*)
                0x00000000000000ac                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000ac                __ctors_start = .
 *(.ctors)
                0x00000000000000ac                __ctors_end = .
                0x00000000000000ac                __dtors_start = .
 *(.dtors)
                0x00000000000000ac                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000ac        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
                0x00000000000000ac                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000ac        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000b8       0x16 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                0x00000000000000b8                __do_copy_data
 .init4         0x00000000000000ce       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000ce                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000de        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
 *(.init9)
 *(.text)
 .text          0x00000000000000e6        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o
                0x00000000000000e6                __vector_38
                0x00000000000000e6                __vector_22
                0x00000000000000e6                __vector_28
                0x00000000000000e6                __vector_1
                0x00000000000000e6                __vector_32
                0x00000000000000e6                __vector_34
                0x00000000000000e6                __vector_24
                0x00000000000000e6                __vector_12
                0x00000000000000e6                __bad_interrupt
                0x00000000000000e6                __vector_6
                0x00000000000000e6                __vector_31
                0x00000000000000e6                __vector_35
                0x00000000000000e6                __vector_39
                0x00000000000000e6                __vector_3
                0x00000000000000e6                __vector_23
                0x00000000000000e6                __vector_30
                0x00000000000000e6                __vector_25
                0x00000000000000e6                __vector_11
                0x00000000000000e6                __vector_13
                0x00000000000000e6                __vector_19
                0x00000000000000e6                __vector_7
                0x00000000000000e6                __vector_41
                0x00000000000000e6                __vector_27
                0x00000000000000e6                __vector_5
                0x00000000000000e6                __vector_33
                0x00000000000000e6                __vector_37
                0x00000000000000e6                __vector_4
                0x00000000000000e6                __vector_9
                0x00000000000000e6                __vector_2
                0x00000000000000e6                __vector_21
                0x00000000000000e6                __vector_15
                0x00000000000000e6                __vector_36
                0x00000000000000e6                __vector_29
                0x00000000000000e6                __vector_40
                0x00000000000000e6                __vector_8
                0x00000000000000e6                __vector_26
                0x00000000000000e6                __vector_14
                0x00000000000000e6                __vector_10
                0x00000000000000e6                __vector_16
                0x00000000000000e6                __vector_18
                0x00000000000000e6                __vector_20
                0x00000000000000e6                __vector_42
                0x00000000000000ea                . = ALIGN (0x2)
 *(.text.*)
 .text.lcd_set_cursor
                0x00000000000000ea       0x1e src/LCD.o
                0x00000000000000ea                lcd_set_cursor
 .text.lcd_init
                0x0000000000000108        0xa src/LCD.o
                0x0000000000000108                lcd_init
 .text.lcd_reset
                0x0000000000000112       0x1c src/LCD.o
                0x0000000000000112                lcd_reset
 .text.get_string_len
                0x000000000000012e       0x16 src/LCD.o
                0x000000000000012e                get_string_len
 .text.lcd_send_string
                0x0000000000000144       0x56 src/LCD.o
                0x0000000000000144                lcd_send_string
 .text.lcd_set_contrast
                0x000000000000019a       0x2a src/LCD.o
                0x000000000000019a                lcd_set_contrast
 .text.lcd_set_backlight
                0x00000000000001c4       0x2a src/LCD.o
                0x00000000000001c4                lcd_set_backlight
 .text.startup.main
                0x00000000000001ee       0x7c src/main.o
                0x00000000000001ee                main
 .text.__vector_17
                0x000000000000026a       0xae src/main.o
                0x000000000000026a                __vector_17
 .text.eeprom_write
                0x0000000000000318       0x10 src/eeprom.o
                0x0000000000000318                eeprom_write
 .text.eeprom_read
                0x0000000000000328        0xe src/eeprom.o
                0x0000000000000328                eeprom_read
 .text.eeprom_redundant_read
                0x0000000000000336       0x4e src/eeprom.o
                0x0000000000000336                eeprom_redundant_read
 .text.eeprom_redundant_write
                0x0000000000000384       0x32 src/eeprom.o
                0x0000000000000384                eeprom_redundant_write
 .text.USART_transmit
                0x00000000000003b6        0xe src/usci.o
                0x00000000000003b6                USART_transmit
 .text.USART_init
                0x00000000000003c4       0x18 src/usci.o
                0x00000000000003c4                USART_init
 .text.USART_transmit_array
                0x00000000000003dc       0x3a src/usci.o
                0x00000000000003dc                USART_transmit_array
                0x0000000000000416                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000416        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x0000000000000416                exit
                0x0000000000000416                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000416        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000041a                _etext = .

.data           0x0000000000800100       0x14 load address 0x000000000000041a
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 .data.running  0x0000000000800100        0x1 src/main.o
                0x0000000000800100                running
 .data.direction
                0x0000000000800101        0x1 src/main.o
                0x0000000000800101                direction
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800102        0x9 src/main.o
 .rodata.stepperarray
                0x000000000080010b        0x8 src/main.o
                0x000000000080010b                stepperarray
 *(.gnu.linkonce.d*)
                0x0000000000800114                . = ALIGN (0x2)
 *fill*         0x0000000000800113        0x1 
                0x0000000000800114                _edata = .
                0x0000000000800114                PROVIDE (__data_end, .)

.bss            0x0000000000800114       0x25
                0x0000000000800114                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.workingbuffer
                0x0000000000800114       0x20 src/LCD.o
 .bss.send_data
                0x0000000000800134        0x2 src/LCD.o
 .bss.deadband  0x0000000000800136        0x1 src/main.o
                0x0000000000800136                deadband
 *(COMMON)
 COMMON         0x0000000000800137        0x2 src/main.o
                0x0000000000800137                stepperctr
                0x0000000000800138                numberofrots
                0x0000000000800139                PROVIDE (__bss_end, .)
                0x000000000000041a                __data_load_start = LOADADDR (.data)
                0x000000000000042e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800139        0x0
                0x0000000000800139                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800139                PROVIDE (__noinit_end, .)
                0x0000000000800139                _end = .
                0x0000000000800139                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x16d4
 *(.stab)
 .stab          0x0000000000000000      0x660 src/LCD.o
                                        0x870 (size before relaxing)
 .stab          0x0000000000000660      0x72c src/main.o
                                        0x798 (size before relaxing)
 .stab          0x0000000000000d8c      0x54c src/eeprom.o
                                        0x72c (size before relaxing)
 .stab          0x00000000000012d8      0x3fc src/usci.o
                                        0x5c4 (size before relaxing)

.stabstr        0x0000000000000000     0x11d7
 *(.stabstr)
 .stabstr       0x0000000000000000     0x11d7 src/LCD.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 src/LCD.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 src/main.o
 .comment       0x0000000000000011       0x12 src/eeprom.o
 .comment       0x0000000000000011       0x12 src/usci.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega32u4.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(defs.elf elf32-avr)
LOAD linker stubs
